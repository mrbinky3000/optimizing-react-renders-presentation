{"version":3,"file":"demo2.7ddfb3a9.chunk.js","mappings":"gPAGaA,EAAcC,EAAAA,gBAE3BD,EAAYE,SAASC,UAAY,CAC/BC,gBAAiBC,IAAAA,KACjBC,SAAUD,IAAAA,QCFZ,IAAIE,EAAc,EAEZC,EAAU,WACdD,GAAe,EACf,OAAsCE,EAAAA,EAAAA,YAAWT,GAAzCU,EAAR,EAAQA,gBAAiBJ,EAAzB,EAAyBA,SACzB,GAAsCK,EAAAA,EAAAA,UAASC,KAAKC,OAApD,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAmB,kBAAMD,EAAeH,KAAKC,QAEnD,OAAOI,EAAAA,EAAAA,UAAQ,kBACf,uBAAKC,MAAO,CAAEC,iBAAiBC,EAAAA,EAAAA,OAC7B,0BAAI,yCAAiBb,IACrB,0BAAQc,QAASL,GAAjB,aACA,0BAAQK,QAASX,GAAjB,YACA,uCAAeI,EAAf,cAAuCR,EAAvC,UAKJ,QAAeL,EAAAA,KAAWO,GAE1BA,EAAQL,UAAY,CAClBG,SAAUD,IAAAA,QAGZG,EAAQc,aAAe,CACrBhB,SAAU,MCzBZ,IAAIC,EAAc,EAEZgB,EAAU,SAAC,GAAkB,IAAhBC,EAAgB,EAAhBA,UACjBjB,GAAe,EACf,OAAsCI,EAAAA,EAAAA,UAASC,KAAKC,OAApD,eAAOC,EAAP,KAAoBC,EAApB,KAGA,OACE,uBAAKS,UAAWA,EAAWN,MAAO,CAAEC,iBAAiBC,EAAAA,EAAAA,OACnD,0BAAI,yCAAiBb,EAAjB,MACJ,0BAAQc,QALa,kBAAMN,EAAeH,KAAKC,SAK/C,aACA,uCAAeC,GACf,gBAAC,EAAD,QAKN,QAAeb,EAAAA,KAAWsB,GAE1BA,EAAQpB,UAAY,CAClBqB,UAAWnB,IAAAA,QAGbkB,EAAQD,aAAe,CACrBE,UAAW,MCxBb,IAAIjB,EAAc,EAEZkB,EAAS,SAAC,GAAkB,IAAhBD,EAAgB,EAAhBA,UAChBjB,GAAe,EACf,OAAsCI,EAAAA,EAAAA,UAASC,KAAKC,OAApD,eAAOC,EAAP,KAAoBC,EAApB,KAGA,OACE,uBAAKS,UAAWA,EAAWN,MAAO,CAAEC,iBAAiBC,EAAAA,EAAAA,OACnD,0BAAI,wCAAgBb,EAAhB,MACJ,0BAAQc,QALa,kBAAMN,EAAeH,KAAKC,SAK/C,aACA,uCAAeC,GACf,gBAAC,EAAD,QAKN,QAAeb,EAAAA,KAAWwB,GAE1BA,EAAOtB,UAAY,CACjBqB,UAAWnB,IAAAA,QAGboB,EAAOH,aAAe,CACpBE,UAAW,MCzBb,IAAIjB,EAAc,EAEZmB,EAAU,SAAC,GAAiB,IAAfpB,EAAe,EAAfA,SACjBC,GAAe,EACf,OAAsCI,EAAAA,EAAAA,UAASC,KAAKC,OAApD,eAAOC,EAAP,KAAoBC,EAApB,KAGA,OACA,uBAAKG,MAAO,CAAEC,iBAAiBC,EAAAA,EAAAA,OAC7B,0BAAI,yCAAiBb,IACrB,0BAAQc,QALe,kBAAMN,EAAeH,KAAKC,SAKjD,aACA,uCAAeC,EAAf,cAAuCR,EAAvC,OAKJ,UAEAoB,EAAQvB,UAAY,CAClBG,SAAUD,IAAAA,QAGZqB,EAAQJ,aAAe,CACrBhB,SAAU,MCtBZ,IAAIC,EAAc,EAEZoB,EAAU,SAAC,GAAiB,IAAfrB,EAAe,EAAfA,SACjBC,GAAe,EACf,OAAsCI,EAAAA,EAAAA,UAASC,KAAKC,OAApD,eAAOC,EAAP,KAAoBC,EAApB,KAGA,OACE,uBAAKG,MAAO,CAAEC,iBAAiBC,EAAAA,EAAAA,OAC7B,0BAAI,yCAAiBb,EAAjB,MACJ,0BAAQc,QALa,kBAAMN,EAAeH,KAAKC,SAK/C,aACA,uCAAeC,GACf,gBAAC,EAAD,CAASR,SAAUA,MAKzB,UAEAqB,EAAQxB,UAAY,CAClBG,SAAUD,IAAAA,OACVmB,UAAWnB,IAAAA,QAGbsB,EAAQL,aAAe,CACrBhB,SAAU,KACVkB,UAAW,MC1Bb,IAAIjB,EAAc,EAEZqB,EAAS,SAAC,GAA4B,IAA1BtB,EAA0B,EAA1BA,SAAUkB,EAAgB,EAAhBA,UAC1BjB,GAAe,EACf,OAAsCI,EAAAA,EAAAA,UAASC,KAAKC,OAApD,eAAOC,EAAP,KAAoBC,EAApB,KAGA,OACE,uBAAKS,UAAWA,EAAWN,MAAO,CAAEC,iBAAiBC,EAAAA,EAAAA,OACnD,0BAAI,wCAAgBb,EAAhB,MACJ,0BAAQc,QALa,kBAAMN,EAAeH,KAAKC,SAK/C,aACA,uCAAeC,GACf,gBAAC,EAAD,CAASR,SAAUA,MAKzB,UAEAsB,EAAOzB,UAAY,CACjBG,SAAUD,IAAAA,OACVmB,UAAWnB,IAAAA,QAGbuB,EAAON,aAAe,CACpBhB,SAAU,KACVkB,UAAW,MC9Bb,QAAsB,uBAAtB,EAAsD,uBAAtD,EAAsF,uBCMtF,IAAIjB,EAAc,EAiClB,QA1Bc,WACZ,OAAsCI,EAAAA,EAAAA,UAASC,KAAKC,OAApD,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,SAA3C,eAAOL,EAAP,KAAiBuB,EAAjB,KAEMnB,EAAkB,WATJ,IACdoB,EAQ0BD,GAR1BC,EAAQ,CAAC,MAAO,MAAO,UAAW,UAAW,QAAS,QAAS,SAAU,QAAS,UAAW,UACtFC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMI,WAY9C,OAJAC,EAAAA,EAAAA,YAAU,WACR5B,GAAe,KAIf,uBAAKiB,UAAWY,EAAOlB,MAAO,CAAEC,iBAAiBC,EAAAA,EAAAA,OAC/C,gBAACpB,EAAYE,SAAb,CAAsBmC,MAAO,CAC3B3B,gBAAAA,EACAJ,SAAAA,IAEA,0BAAI,uDAA+BC,IACnC,0BAAQc,QAbW,kBAAMN,EAAeH,KAAKC,SAa7C,aACA,0BAAQQ,QAASX,GAAjB,YACA,uCAAeI,EAAf,cAAuCR,EAAvC,KACA,gBAAC,EAAD,CAAQkB,UAAWY,IACnB,gBAAC,EAAD,CAAQZ,UAAWY,EAAU9B,SAAUA,Q,4BCzB/C,IAAIgC,EAAuB,EAAQ,MAEnC,SAASC,KACT,SAASC,KACTA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWZ,EAAf,CAIA,IAAIa,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIE,KAAO,sBACLF,GAGR,SAASG,IACP,OAAOV,EAFTA,EAAKW,WAAaX,EAMlB,IAAIY,EAAiB,CACnBC,MAAOb,EACPc,KAAMd,EACNe,KAAMf,EACNgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EAERoB,IAAKpB,EACLqB,QAASX,EACTY,QAAStB,EACTuB,YAAavB,EACbwB,WAAYd,EACZe,KAAMzB,EACN0B,SAAUhB,EACViB,MAAOjB,EACPkB,UAAWlB,EACXmB,MAAOnB,EACPoB,MAAOpB,EAEPqB,eAAgBnC,EAChBC,kBAAmBF,GAKrB,OAFAiB,EAAenD,UAAYmD,EAEpBA,I,eC7CPd,EAAOC,QAAU,EAAQ,KAAR,I,sBCNnBD,EAAOC,QAFoB,gD,6CCK3B,IAAAiC,EAAA,4BAAyB7C,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqB4C,SAAS","sources":["webpack://optimizing-react-renders-presentation/./src/demo-02/DemoContext.jsx","webpack://optimizing-react-renders-presentation/./src/demo-02/BlockA3.jsx","webpack://optimizing-react-renders-presentation/./src/demo-02/BlockA2.jsx","webpack://optimizing-react-renders-presentation/./src/demo-02/BlockA.jsx","webpack://optimizing-react-renders-presentation/./src/demo-02/BlockB3.jsx","webpack://optimizing-react-renders-presentation/./src/demo-02/BlockB2.jsx","webpack://optimizing-react-renders-presentation/./src/demo-02/BlockB.jsx","webpack://optimizing-react-renders-presentation/./src/demo-02/App.scss?1562","webpack://optimizing-react-renders-presentation/./src/demo-02/App.jsx","webpack://optimizing-react-renders-presentation/./node_modules/prop-types/factoryWithThrowingShims.js","webpack://optimizing-react-renders-presentation/./node_modules/prop-types/index.js","webpack://optimizing-react-renders-presentation/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://optimizing-react-renders-presentation/./node_modules/@express-labs/raven-tools/src/getRandomHexColor/getRandomHexColor.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const DemoContext = React.createContext()\n\nDemoContext.Provider.propTypes = {\n  pickNewUsername: PropTypes.func,\n  userName: PropTypes.string\n}\n","import React, { useContext, useState, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { getRandomHexColor } from '@express-labs/raven-tools'\nimport { DemoContext } from './DemoContext.jsx'\n\nlet renderCount = 0\n\nconst BlockA3 = () => {\n  renderCount += 1\n  const { onClickUsername, userName } = useContext(DemoContext)\n  const [myTimeStamp, setMyTimestamp] = useState(Date.now())\n  const onClickTimestamp = () => setMyTimestamp(Date.now())\n\n  return useMemo(() => (\n  <div style={{ backgroundColor: getRandomHexColor() }}>\n    <h1><span>Block A3: {renderCount}</span></h1>\n    <button onClick={onClickTimestamp}>Timestamp</button>\n    <button onClick={onClickUsername}>Username</button>\n    <p>timestamp: {myTimeStamp} userName: {userName} </p>\n  </div>\n  ))\n}\n\nexport default React.memo(BlockA3)\n\nBlockA3.propTypes = {\n  userName: PropTypes.string\n}\n\nBlockA3.defaultProps = {\n  userName: null\n}\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { getRandomHexColor } from '@express-labs/raven-tools'\nimport BlockA3 from './BlockA3.jsx'\n\nlet renderCount = 0\n\nconst BlockA2 = ({ className }) => {\n  renderCount += 1\n  const [myTimeStamp, setMyTimestamp] = useState(Date.now())\n  const onClickTimestamp = () => setMyTimestamp(Date.now())\n\n  return (\n    <div className={className} style={{ backgroundColor: getRandomHexColor() }}>\n      <h1><span>Block A2: {renderCount} </span></h1>\n      <button onClick={onClickTimestamp}>Timestamp</button>\n      <p>timestamp: {myTimeStamp}</p>\n      <BlockA3 />\n    </div>\n  )\n}\n\nexport default React.memo(BlockA2)\n\nBlockA2.propTypes = {\n  className: PropTypes.string\n}\n\nBlockA2.defaultProps = {\n  className: null\n}\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { getRandomHexColor } from '@express-labs/raven-tools'\nimport BlockA2 from './BlockA2.jsx'\n\nlet renderCount = 0\n\nconst BlockA = ({ className }) => {\n  renderCount += 1\n  const [myTimeStamp, setMyTimestamp] = useState(Date.now())\n  const onClickTimestamp = () => setMyTimestamp(Date.now())\n\n  return (\n    <div className={className} style={{ backgroundColor: getRandomHexColor() }}>\n      <h1><span>Block A: {renderCount} </span></h1>\n      <button onClick={onClickTimestamp}>Timestamp</button>\n      <p>timestamp: {myTimeStamp}</p>\n      <BlockA2 />\n    </div>\n  )\n}\n\nexport default React.memo(BlockA)\n\nBlockA.propTypes = {\n  className: PropTypes.string\n}\n\nBlockA.defaultProps = {\n  className: null\n}\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { getRandomHexColor } from '@express-labs/raven-tools'\n\nlet renderCount = 0\n\nconst BlockB3 = ({ userName }) => {\n  renderCount += 1\n  const [myTimeStamp, setMyTimestamp] = useState(Date.now())\n  const onClickTimestamp = () => setMyTimestamp(Date.now())\n\n  return (\n  <div style={{ backgroundColor: getRandomHexColor() }}>\n    <h1><span>Block B3: {renderCount}</span></h1>\n    <button onClick={onClickTimestamp}>Timestamp</button>\n    <p>timestamp: {myTimeStamp} userName: {userName} </p>\n  </div>\n  )\n}\n\nexport default BlockB3\n\nBlockB3.propTypes = {\n  userName: PropTypes.string\n}\n\nBlockB3.defaultProps = {\n  userName: null\n}\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { getRandomHexColor } from '@express-labs/raven-tools'\nimport BlockB3 from './BlockB3.jsx'\n\nlet renderCount = 0\n\nconst BlockB2 = ({ userName }) => {\n  renderCount += 1\n  const [myTimeStamp, setMyTimestamp] = useState(Date.now())\n  const onClickTimestamp = () => setMyTimestamp(Date.now())\n\n  return (\n    <div style={{ backgroundColor: getRandomHexColor() }}>\n      <h1><span>Block B2: {renderCount} </span></h1>\n      <button onClick={onClickTimestamp}>Timestamp</button>\n      <p>timestamp: {myTimeStamp}</p>\n      <BlockB3 userName={userName} />\n    </div>\n  )\n}\n\nexport default BlockB2\n\nBlockB2.propTypes = {\n  userName: PropTypes.string,\n  className: PropTypes.string\n}\n\nBlockB2.defaultProps = {\n  userName: null,\n  className: null\n}\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { getRandomHexColor } from '@express-labs/raven-tools'\nimport BlockB2 from './BlockB2.jsx'\n\nlet renderCount = 0\n\nconst BlockB = ({ userName, className }) => {\n  renderCount += 1\n  const [myTimeStamp, setMyTimestamp] = useState(Date.now())\n  const onClickTimestamp = () => setMyTimestamp(Date.now())\n\n  return (\n    <div className={className} style={{ backgroundColor: getRandomHexColor() }}>\n      <h1><span>Block B: {renderCount} </span></h1>\n      <button onClick={onClickTimestamp}>Timestamp</button>\n      <p>timestamp: {myTimeStamp}</p>\n      <BlockB2 userName={userName} />\n    </div>\n  )\n}\n\nexport default BlockB\n\nBlockB.propTypes = {\n  userName: PropTypes.string,\n  className: PropTypes.string\n}\n\nBlockB.defaultProps = {\n  userName: null,\n  className: null\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"app\":\"OPgv2rO4LuNCisZ69aON\",\"blockA\":\"lAJpS7lkKJn0LoiqjPsf\",\"blockB\":\"qVgasPDgeEF0olwsYTuK\"};","import React, { useState, useEffect } from 'react'\nimport { getRandomHexColor } from '@express-labs/raven-tools'\nimport { DemoContext } from './DemoContext.jsx'\nimport BlockA from './BlockA.jsx'\nimport BlockB from './BlockB.jsx'\nimport s from './App.scss'\n\nlet renderCount = 1\n\nconst getRandomName = () => {\n  const items = ['Amy', 'Bob', 'Charlie', 'Daanesh', 'Ernie', 'Felix', 'George', 'Helen', 'Isabela', 'Joyce']\n  return items[Math.floor(Math.random() * items.length)]\n}\n\nconst Demo2 = () => {\n  const [myTimeStamp, setMyTimestamp] = useState(Date.now())\n  const [userName, setMyUsername] = useState('Larry')\n  const onClickTimestamp = () => setMyTimestamp(Date.now())\n  const onClickUsername = () => { setMyUsername(getRandomName()) }\n  useEffect(() => {\n    renderCount += 1\n  })\n\n  return (\n    <div className={s.app} style={{ backgroundColor: getRandomHexColor() }}>\n      <DemoContext.Provider value={{\n        onClickUsername,\n        userName\n      }}>\n        <h1><span>Demo 2 (Using Context): {renderCount}</span></h1>\n        <button onClick={onClickTimestamp}>Timestamp</button>\n        <button onClick={onClickUsername}>Username</button>\n        <p>timestamp: {myTimeStamp} userName: {userName} </p>\n        <BlockA className={s.blockA} />\n        <BlockB className={s.blockB} userName={userName} />\n      </DemoContext.Provider>\n    </div>\n  )\n}\n\nexport default Demo2\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * @function getRandomHexColor\n * @desc Create a random hex color.  This is useful for visually grocking how many times a React component\n * renders.  This is not meant for production.  Webpack tree-shaking will keep this out of the app\n * bundle.\n *\n * Example:\n *  add this attribute to the root element in a react component's render method.\n *  style={{ backgroundColor: getRandomHexColor() }}\n *\n * Thanks to Paul Irish, of course.\n * https://www.paulirish.com/2009/random-hex-color-code-snippets/\n * @return {string} A string that starts with \"#\" followed by 6 hex digits.\n */\nexport default () => `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n"],"names":["DemoContext","React","Provider","propTypes","pickNewUsername","PropTypes","userName","renderCount","BlockA3","useContext","onClickUsername","useState","Date","now","myTimeStamp","setMyTimestamp","onClickTimestamp","useMemo","style","backgroundColor","getRandomHexColor","onClick","defaultProps","BlockA2","className","BlockA","BlockB3","BlockB2","BlockB","setMyUsername","items","Math","floor","random","length","useEffect","s","value","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","e","toString"],"sourceRoot":""}