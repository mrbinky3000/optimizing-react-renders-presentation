{"version":3,"file":"demo4.dc5ceb45.chunk.js","mappings":"uOAEaA,GAAYC,EAAAA,EAAAA,IAAY,CACnCC,KAAM,WACNC,aAAc,CACZC,SAAU,QACVC,OAAQ,UAEVC,SAAU,CACRC,YAAa,SAACC,EAAOC,GACnBD,EAAMJ,SAAWK,EAAOC,SAE1BC,UAAW,SAACH,EAAOC,GACjBD,EAAMH,OAASI,EAAOC,YAMbH,EAAgBP,EAAUY,QAA1BL,YAEf,QAAeP,EAAf,Q,cCrBaa,EAAgB,WAC3B,IAAMC,EAAQ,CAAC,MAAO,MAAO,UAAW,UAAW,QAAS,QAAS,SAAU,QAAS,UAAW,SACnG,OAAOA,EAAMC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMI,U,mBCK5CC,EAAc,EAEZC,EAAU,WACdD,GAAe,EACf,IAAMf,GAAWiB,EAAAA,EAAAA,KAAY,SAACb,GAAD,OAAWA,EAAMc,KAAKlB,YAC7CmB,GAAWC,EAAAA,EAAAA,MAGjB,GAAsCC,EAAAA,EAAAA,UAASC,KAAKC,OAApD,eAAOC,EAAP,KAAoBC,EAApB,KAGA,OACE,uBAAKC,MAAO,CAAEC,iBAAiBC,EAAAA,EAAAA,OAC7B,0BAAI,yCAAiBb,IACrB,0BAAQc,QALa,kBAAMJ,EAAeH,KAAKC,SAK/C,aACA,0BAAQM,QATY,kBAAMV,EAAShB,EAAYM,QAS/C,YACA,uCAAee,EAAf,cAAuCxB,EAAvC,OAKN,QAAe8B,EAAAA,KAAWd,GAE1BA,EAAQe,UAAY,CAClBC,SAAUC,IAAAA,QAGZjB,EAAQkB,aAAe,CACrBF,SAAU,MC9BZ,IAAIjB,EAAc,EAEZoB,EAAU,SAAC,GAAkB,IAAhBC,EAAgB,EAAhBA,UACjBrB,GAAe,EACf,OAAsCM,EAAAA,EAAAA,UAASC,KAAKC,OAApD,eAAOC,EAAP,KAAoBC,EAApB,KAGA,OACE,uBAAKW,UAAWA,EAAWV,MAAO,CAAEC,iBAAiBC,EAAAA,EAAAA,OACnD,0BAAI,yCAAiBb,EAAjB,MACJ,0BAAQc,QALa,kBAAMJ,EAAeH,KAAKC,SAK/C,aACA,uCAAeC,GACf,gBAAC,EAAD,QAKN,QAAeM,EAAAA,KAAWK,GAE1BA,EAAQJ,UAAY,CAClBK,UAAWH,IAAAA,QAGbE,EAAQD,aAAe,CACrBE,UAAW,MCxBb,IAAIrB,EAAc,EAEZsB,EAAS,SAAC,GAAkB,IAAhBD,EAAgB,EAAhBA,UAChBrB,GAAe,EACf,OAAsCM,EAAAA,EAAAA,UAASC,KAAKC,OAApD,eAAOC,EAAP,KAAoBC,EAApB,KAGA,OACE,uBAAKW,UAAWA,EAAWV,MAAO,CAAEC,iBAAiBC,EAAAA,EAAAA,OACnD,0BAAI,wCAAgBb,EAAhB,MACJ,0BAAQc,QALa,kBAAMJ,EAAeH,KAAKC,SAK/C,aACA,uCAAeC,GACf,gBAAC,EAAD,QAKN,QAAeM,EAAAA,KAAWO,GAE1BA,EAAON,UAAY,CACjBK,UAAWH,IAAAA,QAGbI,EAAOH,aAAe,CACpBE,UAAW,MCzBb,IAAIrB,EAAc,EAEZuB,EAAU,SAAC,GAAiB,IAAfN,EAAe,EAAfA,SACjBjB,GAAe,EACf,OAAsCM,EAAAA,EAAAA,UAASC,KAAKC,OAApD,eAAOC,EAAP,KAAoBC,EAApB,KAGA,OACA,uBAAKC,MAAO,CAAEC,iBAAiBC,EAAAA,EAAAA,OAC7B,0BAAI,yCAAiBb,IACrB,0BAAQc,QALe,kBAAMJ,EAAeH,KAAKC,SAKjD,aACA,uCAAeC,EAAf,cAAuCQ,EAAvC,OAKJ,UAEAM,EAAQP,UAAY,CAClBC,SAAUC,IAAAA,QAGZK,EAAQJ,aAAe,CACrBF,SAAU,MCtBZ,IAAIjB,EAAc,EAEZwB,EAAU,SAAC,GAAiB,IAAfP,EAAe,EAAfA,SACjBjB,GAAe,EACf,OAAsCM,EAAAA,EAAAA,UAASC,KAAKC,OAApD,eAAOC,EAAP,KAAoBC,EAApB,KAGA,OACE,uBAAKC,MAAO,CAAEC,iBAAiBC,EAAAA,EAAAA,OAC7B,0BAAI,yCAAiBb,EAAjB,MACJ,0BAAQc,QALa,kBAAMJ,EAAeH,KAAKC,SAK/C,aACA,uCAAeC,GACf,gBAAC,EAAD,CAASQ,SAAUA,MAKzB,UAEAO,EAAQR,UAAY,CAClBC,SAAUC,IAAAA,OACVG,UAAWH,IAAAA,QAGbM,EAAQL,aAAe,CACrBF,SAAU,KACVI,UAAW,MC1Bb,IAAIrB,EAAc,EAEZyB,EAAS,SAAC,GAA4B,IAA1BR,EAA0B,EAA1BA,SAAUI,EAAgB,EAAhBA,UAC1BrB,GAAe,EACf,OAAsCM,EAAAA,EAAAA,UAASC,KAAKC,OAApD,eAAOC,EAAP,KAAoBC,EAApB,KAGA,OACE,uBAAKW,UAAWA,EAAWV,MAAO,CAAEC,iBAAiBC,EAAAA,EAAAA,OACnD,0BAAI,wCAAgBb,EAAhB,MACJ,0BAAQc,QALa,kBAAMJ,EAAeH,KAAKC,SAK/C,aACA,uCAAeC,GACf,gBAAC,EAAD,CAASQ,SAAUA,MAKzB,UAEAQ,EAAOT,UAAY,CACjBC,SAAUC,IAAAA,OACVG,UAAWH,IAAAA,QAGbO,EAAON,aAAe,CACpBF,SAAU,KACVI,UAAW,MC9Bb,QAAsB,uBAAtB,EAAsD,uBAAtD,EAAsF,uBCQtF,IAAIrB,EAAc,EA0BlB,QAxBc,WACZ,IAAMf,GAAWiB,EAAAA,EAAAA,KAAY,SAACb,GAAD,OAAWA,EAAMc,KAAKlB,YAC7CmB,GAAWC,EAAAA,EAAAA,MAGjB,GAAsCC,EAAAA,EAAAA,UAASC,KAAKC,OAApD,eAAOC,EAAP,KAAoBC,EAApB,KAOA,OAJAgB,EAAAA,EAAAA,YAAU,WACR1B,GAAe,KAIf,uBAAKqB,UAAWM,EAAOhB,MAAO,CAAEC,iBAAiBC,EAAAA,EAAAA,OAC/C,0BAAI,2DAAmCb,IACvC,0BAAQc,QATa,kBAAMJ,EAAeH,KAAKC,SAS/C,aACA,0BAAQM,QAbY,kBAAMV,EAAShB,EAAYM,QAa/C,YACA,uCAAee,EAAf,cAAuCxB,EAAvC,KACA,gBAAC,EAAD,CAAQoC,UAAWM,IACnB,gBAAC,EAAD,CAAQN,UAAWM,EAAUV,SAAUhC,MC3B7C,GAAe2C,EAAAA,EAAAA,IAAe,CAC5BC,QAAS,CACP1B,KAAM2B,KCMV,QANc,kBACZ,gBAAC,KAAD,CAAUC,MAAOA,GACf,gBAAC,EAAD","sources":["webpack://optimizing-react-renders-presentation/./src/demo-04/userSlice.js","webpack://optimizing-react-renders-presentation/./src/demo-04/helpers.js","webpack://optimizing-react-renders-presentation/./src/demo-04/BlockA3.jsx","webpack://optimizing-react-renders-presentation/./src/demo-04/BlockA2.jsx","webpack://optimizing-react-renders-presentation/./src/demo-04/BlockA.jsx","webpack://optimizing-react-renders-presentation/./src/demo-04/BlockB3.jsx","webpack://optimizing-react-renders-presentation/./src/demo-04/BlockB2.jsx","webpack://optimizing-react-renders-presentation/./src/demo-04/BlockB.jsx","webpack://optimizing-react-renders-presentation/./src/demo-04/App.scss?a8a6","webpack://optimizing-react-renders-presentation/./src/demo-04/App.jsx","webpack://optimizing-react-renders-presentation/./src/demo-04/store.js","webpack://optimizing-react-renders-presentation/./src/demo-04/index.jsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const userSlice = createSlice({\n  name: 'username',\n  initialState: {\n    username: 'Larry',\n    status: 'active'\n  },\n  reducers: {\n    setUsername: (state, action) => {\n      state.username = action.payload\n    },\n    setStatus: (state, action) => {\n      state.status = action.payload\n    }\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const { setUsername } = userSlice.actions\n\nexport default userSlice.reducer\n","export const getRandomName = () => {\n  const items = ['Amy', 'Bob', 'Charlie', 'Daanesh', 'Ernie', 'Felix', 'George', 'Helen', 'Isabela', 'Joyce']\n  return items[Math.floor(Math.random() * items.length)]\n}\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setUsername } from './userSlice'\nimport PropTypes from 'prop-types'\nimport { getRandomHexColor } from '@express-labs/raven-tools'\nimport { getRandomName } from './helpers'\n\nlet renderCount = 0\n\nconst BlockA3 = () => {\n  renderCount += 1\n  const username = useSelector((state) => state.user.username)\n  const dispatch = useDispatch()\n  const onClickUsername = () => dispatch(setUsername(getRandomName()))\n\n  const [myTimeStamp, setMyTimestamp] = useState(Date.now())\n  const onClickTimestamp = () => setMyTimestamp(Date.now())\n\n  return (\n    <div style={{ backgroundColor: getRandomHexColor() }}>\n      <h1><span>Block A3: {renderCount}</span></h1>\n      <button onClick={onClickTimestamp}>Timestamp</button>\n      <button onClick={onClickUsername}>username</button>\n      <p>timestamp: {myTimeStamp} userName: {username} </p>\n    </div>\n  )\n}\n\nexport default React.memo(BlockA3)\n\nBlockA3.propTypes = {\n  userName: PropTypes.string\n}\n\nBlockA3.defaultProps = {\n  userName: null\n}\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { getRandomHexColor } from '@express-labs/raven-tools'\nimport BlockA3 from './BlockA3.jsx'\n\nlet renderCount = 0\n\nconst BlockA2 = ({ className }) => {\n  renderCount += 1\n  const [myTimeStamp, setMyTimestamp] = useState(Date.now())\n  const onClickTimestamp = () => setMyTimestamp(Date.now())\n\n  return (\n    <div className={className} style={{ backgroundColor: getRandomHexColor() }}>\n      <h1><span>Block A2: {renderCount} </span></h1>\n      <button onClick={onClickTimestamp}>Timestamp</button>\n      <p>timestamp: {myTimeStamp}</p>\n      <BlockA3 />\n    </div>\n  )\n}\n\nexport default React.memo(BlockA2)\n\nBlockA2.propTypes = {\n  className: PropTypes.string\n}\n\nBlockA2.defaultProps = {\n  className: null\n}\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { getRandomHexColor } from '@express-labs/raven-tools'\nimport BlockA2 from './BlockA2.jsx'\n\nlet renderCount = 0\n\nconst BlockA = ({ className }) => {\n  renderCount += 1\n  const [myTimeStamp, setMyTimestamp] = useState(Date.now())\n  const onClickTimestamp = () => setMyTimestamp(Date.now())\n\n  return (\n    <div className={className} style={{ backgroundColor: getRandomHexColor() }}>\n      <h1><span>Block A: {renderCount} </span></h1>\n      <button onClick={onClickTimestamp}>Timestamp</button>\n      <p>timestamp: {myTimeStamp}</p>\n      <BlockA2 />\n    </div>\n  )\n}\n\nexport default React.memo(BlockA)\n\nBlockA.propTypes = {\n  className: PropTypes.string\n}\n\nBlockA.defaultProps = {\n  className: null\n}\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { getRandomHexColor } from '@express-labs/raven-tools'\n\nlet renderCount = 0\n\nconst BlockB3 = ({ userName }) => {\n  renderCount += 1\n  const [myTimeStamp, setMyTimestamp] = useState(Date.now())\n  const onClickTimestamp = () => setMyTimestamp(Date.now())\n\n  return (\n  <div style={{ backgroundColor: getRandomHexColor() }}>\n    <h1><span>Block B3: {renderCount}</span></h1>\n    <button onClick={onClickTimestamp}>Timestamp</button>\n    <p>timestamp: {myTimeStamp} userName: {userName} </p>\n  </div>\n  )\n}\n\nexport default BlockB3\n\nBlockB3.propTypes = {\n  userName: PropTypes.string\n}\n\nBlockB3.defaultProps = {\n  userName: null\n}\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { getRandomHexColor } from '@express-labs/raven-tools'\nimport BlockB3 from './BlockB3.jsx'\n\nlet renderCount = 0\n\nconst BlockB2 = ({ userName }) => {\n  renderCount += 1\n  const [myTimeStamp, setMyTimestamp] = useState(Date.now())\n  const onClickTimestamp = () => setMyTimestamp(Date.now())\n\n  return (\n    <div style={{ backgroundColor: getRandomHexColor() }}>\n      <h1><span>Block B2: {renderCount} </span></h1>\n      <button onClick={onClickTimestamp}>Timestamp</button>\n      <p>timestamp: {myTimeStamp}</p>\n      <BlockB3 userName={userName} />\n    </div>\n  )\n}\n\nexport default BlockB2\n\nBlockB2.propTypes = {\n  userName: PropTypes.string,\n  className: PropTypes.string\n}\n\nBlockB2.defaultProps = {\n  userName: null,\n  className: null\n}\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { getRandomHexColor } from '@express-labs/raven-tools'\nimport BlockB2 from './BlockB2.jsx'\n\nlet renderCount = 0\n\nconst BlockB = ({ userName, className }) => {\n  renderCount += 1\n  const [myTimeStamp, setMyTimestamp] = useState(Date.now())\n  const onClickTimestamp = () => setMyTimestamp(Date.now())\n\n  return (\n    <div className={className} style={{ backgroundColor: getRandomHexColor() }}>\n      <h1><span>Block B: {renderCount} </span></h1>\n      <button onClick={onClickTimestamp}>Timestamp</button>\n      <p>timestamp: {myTimeStamp}</p>\n      <BlockB2 userName={userName} />\n    </div>\n  )\n}\n\nexport default BlockB\n\nBlockB.propTypes = {\n  userName: PropTypes.string,\n  className: PropTypes.string\n}\n\nBlockB.defaultProps = {\n  userName: null,\n  className: null\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"app\":\"CaJQuTBkIrewNKu_K_Yf\",\"blockA\":\"_y6xZNTG5vKhyyo5DhLv\",\"blockB\":\"CBY60KX9vkeG93Wzjpn9\"};","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setUsername } from './userSlice'\nimport { getRandomHexColor } from '@express-labs/raven-tools'\nimport { getRandomName } from './helpers'\nimport BlockA from './BlockA.jsx'\nimport BlockB from './BlockB.jsx'\nimport s from './App.scss'\n\nlet renderCount = 1\n\nconst Demo4 = () => {\n  const username = useSelector((state) => state.user.username)\n  const dispatch = useDispatch()\n  const onClickUsername = () => dispatch(setUsername(getRandomName()))\n\n  const [myTimeStamp, setMyTimestamp] = useState(Date.now())\n  const onClickTimestamp = () => setMyTimestamp(Date.now())\n\n  useEffect(() => {\n    renderCount += 1\n  })\n\n  return (\n    <div className={s.app} style={{ backgroundColor: getRandomHexColor() }}>\n      <h1><span>Demo 4 (Using React Redux): {renderCount}</span></h1>\n      <button onClick={onClickTimestamp}>Timestamp</button>\n      <button onClick={onClickUsername}>Username</button>\n      <p>timestamp: {myTimeStamp} userName: {username} </p>\n      <BlockA className={s.blockA} />\n      <BlockB className={s.blockB} userName={username} />\n    </div>\n  )\n}\n\nexport default Demo4\n","import { configureStore } from '@reduxjs/toolkit'\nimport userReducer from './userSlice'\n\nexport default configureStore({\n  reducer: {\n    user: userReducer\n  }\n})\n","import React from 'react'\nimport App from './App.jsx'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nconst AppVM = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nexport default AppVM\n"],"names":["userSlice","createSlice","name","initialState","username","status","reducers","setUsername","state","action","payload","setStatus","actions","getRandomName","items","Math","floor","random","length","renderCount","BlockA3","useSelector","user","dispatch","useDispatch","useState","Date","now","myTimeStamp","setMyTimestamp","style","backgroundColor","getRandomHexColor","onClick","React","propTypes","userName","PropTypes","defaultProps","BlockA2","className","BlockA","BlockB3","BlockB2","BlockB","useEffect","s","configureStore","reducer","userReducer","store"],"sourceRoot":""}